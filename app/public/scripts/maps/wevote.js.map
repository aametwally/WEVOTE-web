{"version":3,"sources":["scripts/app.ts","scripts/controllers.ts","scripts/services.ts"],"names":[],"mappings":"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","file":"../wevote.js","sourcesContent":["module wevote {\r\n    export let wevoteApp =\r\n        angular.module('wevote', ['ui.router', 'ngResource', 'angularFileUpload'])\r\n            .config(['$stateProvider', '$urlRouterProvider',\r\n                function ($stateProvider: ng.ui.IStateProvider, $urlRouterProvider: ng.ui.IUrlRouterProvider) {\r\n                    $stateProvider\r\n                    // route for the home page\r\n                        .state('app', {\r\n                            url: '/',\r\n                            views: {\r\n                                'header': {\r\n                                    templateUrl: 'views/header.html'\r\n                                },\r\n                                'content': {\r\n                                    templateUrl: \"views/main.html\",\r\n                                    controller: 'MainController'\r\n                                },\r\n                                'footer': {\r\n                                    templateUrl: 'views/footer.html'\r\n                                }\r\n                            }\r\n                        })\r\n\r\n                        .state('app.info', {\r\n                            url: 'help',\r\n                            views: {\r\n                                'content@': {\r\n                                    template: '<h1>Help To be Completed</h1>'\r\n                                }\r\n                            }\r\n                        })\r\n\r\n                        .state('app.feedback', {\r\n                            url: 'feedback',\r\n                            views: {\r\n                                'content@': {\r\n                                    template: '<h1>Feedback To be Completed</h1>'\r\n                                }\r\n                            }\r\n                        })\r\n\r\n                    ;\r\n                    $urlRouterProvider.otherwise('/');\r\n                }])\r\n\r\n\r\n            .filter('shortNumber', function () {\r\n                return function (number: any) {\r\n                    if (number) {\r\n                        var abs = Math.abs(number);\r\n                        if (abs >= Math.pow(10, 12)) {\r\n                            // trillion\r\n                            number = (number / Math.pow(10, 12)).toFixed(1) + \"T\";\r\n                        } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9)) {\r\n                            // billion\r\n                            number = (number / Math.pow(10, 9)).toFixed(1) + \"B\";\r\n                        } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6)) {\r\n                            // million\r\n                            number = (number / Math.pow(10, 6)).toFixed(1) + \"M\";\r\n                        } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3)) {\r\n                            // thousand\r\n                            number = (number / Math.pow(10, 3)).toFixed(1) + \"K\";\r\n                        }\r\n                        return number;\r\n                    }\r\n                };\r\n            })\r\n    ;\r\n\r\n}","/**\r\n * Created by asem on 06/06/17.\r\n */\r\nmodule wevote {\r\n    export class MainController {\r\n        static readonly $inject: any = ['$scope', MainController];\r\n        private _scope: ng.IScope;\r\n\r\n        constructor($scope: ng.IScope) {\r\n            this._scope = $scope;\r\n            this._scope.showInput = false;\r\n            this._scope.error = false;\r\n            this._scope.message = \"Loading ...\";\r\n        }\r\n\r\n    }\r\n\r\n    interface ReadsSourceType {\r\n        readonly value: string;\r\n        readonly label: string;\r\n    }\r\n\r\n    export class InputController {\r\n\r\n        static readonly $inject = ['$scope', 'SimulatedReadsService',\r\n            'AlgorithmsService', 'ExperimentService', InputController];\r\n\r\n        private _scope: ng.IScope;\r\n\r\n        private readonly readsSources: ReadsSourceType[] = [{\r\n            value: \"client\",\r\n            label: \"Upload reads file\"\r\n        },\r\n            {\r\n                value: \"server\",\r\n                label: \"Use simulated reads from the server\"\r\n            }\r\n        ];\r\n\r\n        private readonly taxonomySources: ReadsSourceType[] = [{\r\n            value: \"NCBI\",\r\n            label: \"Use NCBI taxonomy database\"\r\n        },\r\n            {\r\n                value: \"custom\",\r\n                label: \"Upload custom taxonomy database\"\r\n            }\r\n        ];\r\n\r\n        private readonly emptyInput: any = {\r\n            user: \"public\",\r\n            email: \"\",\r\n            description: \"\",\r\n            private: false,\r\n            readsSource: this.readsSources[0].value,\r\n            taxonomySource: this.taxonomySources[0].value,\r\n            reads: {\r\n                name: \"\",\r\n                description: \"\",\r\n                onServer: true,\r\n                uri: \"\",\r\n                data: \"\",\r\n                size: \"\",\r\n                count: 0\r\n            },\r\n            taxonomy: {\r\n                name: \"\",\r\n                description: \"\",\r\n                onServer: true,\r\n                uri: \"\",\r\n                data: \"\",\r\n                size: \"\"\r\n            },\r\n            config: {\r\n                minScore: 0,\r\n                minNumAgreed: 0,\r\n                penalty: 2,\r\n                algorithms: \"\"\r\n            }\r\n\r\n        };\r\n\r\n        private areDataLoaded = () => {\r\n            return this._scope.availableDatabaseLoaded &&\r\n                this._scope.supportedAlgorithmsLoaded;\r\n        };\r\n\r\n        private onSimulateReadsSuccess: Function = (response: any) => {\r\n            this._scope.availableDatabase = response;\r\n            this._scope.availableDatabaseLoaded = true;\r\n            this._scope.showInput = this._scope.areDataLoaded();\r\n            console.log(this._scope.showInput);\r\n        }\r\n\r\n        private onSimulatedReadsFail: Function = (response: any) => {\r\n            this._scope.error = true;\r\n            this._scope.message = \"Error: \" + response.status + \" \" + response.statusText;\r\n        }\r\n\r\n        private onSupportedAlgorithmsSuccess: Function = (response: any) => {\r\n            this._scope.supportedAlgorithms = response;\r\n            this._scope.supportedAlgorithms.forEach(function (alg: any) {\r\n                alg.used = true;\r\n            });\r\n            this._scope.supportedAlgorithmsLoaded = true;\r\n            this._scope.showInput = this._scope.areDataLoaded();\r\n            console.log(this._scope.showInput);\r\n        }\r\n\r\n        private onSupportedAlgorithmsFail: Function = (response: any) => {\r\n            this._scope.error = true;\r\n            this._scope.message = \"Error: \" + response.status + \" \" + response.statusText;\r\n        }\r\n\r\n        private getUsedAlgorithms = () => {\r\n            return this._scope.supportedAlgorithms.filter(function (alg: any) {\r\n                return alg.used;\r\n            });\r\n        }\r\n\r\n        private postExperiment = (form: any) => {\r\n            console.log('postExperiment() invoked.');\r\n            console.log(this._scope.experiment);\r\n            this._scope.experiment.config.algorithms = this.getUsedAlgorithms();\r\n            let noAlgorithmChosen: boolean = this.getUsedAlgorithms().length === 0;\r\n\r\n            if (!noAlgorithmChosen) {\r\n                this.ExperimentService.submit(this._scope.experiment);\r\n                this._scope.experiment = JSON.parse(JSON.stringify(this.emptyInput));\r\n                form.$setPristine();\r\n                form.$setUntouched();\r\n                $('#advanced').collapse(\"hide\");\r\n            }\r\n        }\r\n\r\n        constructor($scope: any, private SimulatedReadsService: any,\r\n                    private AlgorithmsService: any, private ExperimentService: any) {\r\n            this._scope = $scope;\r\n            this._scope.inputForm = {};\r\n\r\n            this._scope.readsSources = this.readsSources;\r\n            this._scope.taxonomySources = this.taxonomySources;\r\n\r\n            this._scope.availableDatabase = {};\r\n            this._scope.supportedAlgorithms = {};\r\n            this._scope.availableDatabaseLoaded = false;\r\n            this._scope.supportedAlgorithmsLoaded = false;\r\n\r\n            this._scope.areDataLoaded = this.areDataLoaded;\r\n\r\n            SimulatedReadsService.retrieve(this.onSimulateReadsSuccess, this.onSimulatedReadsFail);\r\n            AlgorithmsService.retrieve(this.onSupportedAlgorithmsSuccess, this.onSupportedAlgorithmsFail);\r\n\r\n            this._scope.experiment = JSON.parse(JSON.stringify(this.emptyInput));\r\n\r\n            this._scope.noAlgorithmChosen = false;\r\n            this._scope.postExperiment = () => {\r\n                this.postExperiment(this._scope.inputForm.form);\r\n            };\r\n\r\n\r\n            this._scope.readsUploader = {};\r\n            this._scope.readsUploaderPostValidation = true;\r\n            this._scope.taxonomyUploader = {};\r\n            this._scope.taxonomyUploaderPostValidation = true;\r\n        }\r\n\r\n    }\r\n\r\n    interface OnSuccessCBType {\r\n        (fileItem: any, response: any, status: any, headers: any): void;\r\n    }\r\n    interface OnAfterAddingFileCBType {\r\n        (fileItem: any): void;\r\n    }\r\n\r\n    abstract class UploaderController {\r\n        protected _scope: ng.IScope;\r\n        protected _uploader: any;\r\n\r\n        protected abstract onSuccessItemCB: OnSuccessCBType;\r\n\r\n        protected abstract onAfterAddingFileCB: OnAfterAddingFileCBType;\r\n\r\n        constructor($scope: ng.IScope, FileUploaderService: any) {\r\n            this._scope = $scope;\r\n\r\n        }\r\n    }\r\n\r\n    export class ReadsUploaderController extends UploaderController {\r\n        static readonly $inject =['$scope', 'FileUploaderService',ReadsUploaderController];\r\n\r\n        constructor($scope: any, FileUploaderService: any) {\r\n            super($scope, FileUploaderService);\r\n            this._uploader = FileUploaderService.getFileUploader(\r\n                'upload/reads', 'Drop reads file here', 'External dataset uploader');\r\n            this._uploader.onSuccessItem = this.onSuccessItemCB;\r\n            this._uploader.onAfterAddingFile = this.onAfterAddingFileCB;\r\n            this._scope.uploader = this._uploader;\r\n        };\r\n\r\n        protected onSuccessItemCB = (fileItem: any, response: any, status: any, header: any) => {\r\n            // console.info('onSuccessItem', fileItem, response, status, headers);\r\n            console.log('success', response, header);\r\n            this._scope.experiment.reads.uri =\r\n                JSON.parse(JSON.stringify(header.filename));\r\n            this._scope.experiment.reads.count =\r\n                parseInt(header.readscount, 10);\r\n        };\r\n\r\n        protected onAfterAddingFileCB = (fileItem: any) => {\r\n            console.info('onAfterAddingFile', fileItem);\r\n\r\n            this._scope.uploader.queue = [fileItem];\r\n\r\n            this._scope.experiment.reads.name =\r\n                JSON.parse(JSON.stringify(fileItem.file.name));\r\n            this._scope.experiment.reads.size =\r\n                JSON.parse(JSON.stringify(fileItem.file.size));\r\n\r\n            setTimeout(function () {\r\n                $(\"[data-toggle='tooltip']\").tooltip({\r\n                    trigger: 'hover'\r\n                });\r\n            }, 500);\r\n        };\r\n    }\r\n\r\n    export class TaxonomyUploaderController extends UploaderController {\r\n        static readonly $inject  = ['$scope', 'FileUploaderService',TaxonomyUploaderController];\r\n\r\n        constructor($scope: any, FileUploaderService: any) {\r\n            super($scope, FileUploaderService)\r\n            this._uploader = FileUploaderService.getFileUploader(\r\n                'upload/taxonomy', 'Drop taxonomy file here', 'Custom taxonomy uploader');\r\n            this._uploader.onSuccessItem = this.onSuccessItemCB;\r\n            this._uploader.onAfterAddingFile = this.onAfterAddingFileCB;\r\n            this._scope.uploader = this._uploader;\r\n        }\r\n\r\n        protected onSuccessItemCB = (fileItem: any, response: any, status: any, headers: any) => {\r\n            // console.info('onSuccessItem', fileItem, response, status, headers);\r\n            console.log('success', response, headers);\r\n            this._scope.experiment.taxonomy.uri =\r\n                JSON.parse(JSON.stringify(headers.filename));\r\n        };\r\n\r\n        protected onAfterAddingFileCB = (fileItem: any) => {\r\n            console.info('onAfterAddingFile', fileItem);\r\n            this._scope.uploader.queue = [fileItem];\r\n\r\n            this._scope.experiment.taxonomy.name =\r\n                JSON.parse(JSON.stringify(fileItem.file.name));\r\n            this._scope.experiment.taxonomy.size =\r\n                JSON.parse(JSON.stringify(fileItem.file.size));\r\n\r\n            setTimeout(function () {\r\n                $(\"[data-toggle='tooltip']\").tooltip({\r\n                    trigger: 'hover'\r\n                });\r\n            }, 500);\r\n        };\r\n    }\r\n\r\n\r\n    export class HeaderController {\r\n        static readonly $inject = ['$scope', HeaderController];\r\n        private _scope: ng.IScope;\r\n\r\n        constructor($scope: any) {\r\n            this._scope = $scope;\r\n            $(\"#loginButton\").click(function () {\r\n                $(\"#loginModal\").modal('toggle');\r\n            });\r\n        }\r\n    }\r\n\r\n    export class ExperimentController {\r\n        static readonly $inject = ['$scope', 'ExperimentService',ExperimentController];\r\n        private _scope: ng.IScope;\r\n\r\n        constructor($scope: ng.IScope, private ExperimentService: any) {\r\n            this._scope = $scope;\r\n            this._scope.experiments = {};\r\n            this._scope.showExperiments = false;\r\n            this._scope.experimentsError = false;\r\n            this._scope.experimentsMessage = \"Loading ...\";\r\n            ExperimentService.retrieve(this.onExperimentsLoadedSuccess, this.onExperimentsLoadedFail);\r\n        }\r\n\r\n        private onExperimentsLoadedSuccess: Function = (response: any) => {\r\n            this._scope.experiments = response;\r\n            this._scope.showExperiments = true;\r\n            setTimeout(() => {\r\n                $(\"[data-toggle='tooltip']\").tooltip({\r\n                    trigger: 'hover',\r\n                    placement: 'top'\r\n                });\r\n\r\n                this._scope.experiments.forEach(function (exp: any) {\r\n                    $('#' + exp._id).popover({\r\n                        html: true,\r\n                        trigger: \"focus\",\r\n                        placement: \"bottom\",\r\n                        content: function () {\r\n                            return $('#data-' + exp._id).html();\r\n                        }\r\n                    });\r\n                    $('#' + exp._id).click(function (e) {\r\n                        // Special stuff to do when this link is clicked...\r\n\r\n                        // Cancel the default action\r\n                        e.preventDefault();\r\n                    });\r\n\r\n                    $('#' + 'desc-' + exp._id).popover({\r\n                        html: true,\r\n                        trigger: \"focus\",\r\n                        placement: \"bottom\",\r\n                        content: function () {\r\n                            return $('#desc-data-' + exp._id).html();\r\n                        }\r\n                    });\r\n                    $('#' + 'desc-' + exp._id).click(function (e) {\r\n                        // Special stuff to do when this link is clicked...\r\n\r\n                        // Cancel the default action\r\n                        e.preventDefault();\r\n                    });\r\n\r\n                    $('#' + 'param-' + exp._id).popover({\r\n                        html: true,\r\n                        trigger: \"focus\",\r\n                        placement: \"bottom\",\r\n                        content: function () {\r\n                            return $('#param-data-' + exp._id).html();\r\n                        }\r\n                    });\r\n                    $('#' + 'param-' + exp._id).click(function (e) {\r\n                        // Special stuff to do when this link is clicked...\r\n\r\n                        // Cancel the default action\r\n                        e.preventDefault();\r\n                    });\r\n                });\r\n\r\n            }, 1000);\r\n        }\r\n\r\n        private onExperimentsLoadedFail: Function = (response: any) => {\r\n            this._scope.experimentsError = true;\r\n            this._scope.experimentsMessage = \"Error: \" + response.status + \" \" + response.statusText;\r\n        }\r\n\r\n    }\r\n\r\n    wevoteApp\r\n        .controller('MainController', MainController.$inject)\r\n        .controller('InputController', InputController.$inject)\r\n        .controller('ReadsUploaderController', ReadsUploaderController.$inject)\r\n        .controller('TaxonomyUploaderController', TaxonomyUploaderController.$inject)\r\n        .controller('HeaderController', HeaderController.$inject)\r\n        .controller('ExperimentController', ExperimentController.$inject)\r\n}","/**\r\n * Created by asem on 06/06/17.\r\n */\r\nmodule wevote\r\n{\r\n    export class FileUploaderFactory {\r\n\r\n        static readonly $inject = ['FileUploader'];\r\n\r\n        private _FileUploader: any;\r\n\r\n        constructor(private FileUploader: any) {\r\n            this._FileUploader = FileUploader;\r\n        }\r\n\r\n        static factory() {\r\n            let instance = (FileUploader: any) => new FileUploaderFactory(FileUploader);\r\n            return instance;\r\n        }\r\n\r\n        public getFileUploader(url: string, label: string, description: string): any {\r\n            let uploader = new this.FileUploader({\r\n                url: url\r\n            });\r\n\r\n            uploader.label = label;\r\n            uploader.description = description;\r\n            uploader.atLeastSingleFileUploaded = false;\r\n            // FILTERS\r\n\r\n            uploader.filters.push({\r\n                name: 'customFilter',\r\n                fn: function (item: any /*{File|FileLikeObject}*/, options: any) {\r\n                    return this.queue.length < 10;\r\n                }\r\n            });\r\n\r\n            // CALLBACKS\r\n            uploader.onWhenAddingFileFailed = function (item: any /*{File|FileLikeObject}*/, filter: any, options: any) {\r\n                console.info('onWhenAddingFileFailed', item, filter, options);\r\n            };\r\n\r\n            uploader.onAfterAddingAll = function (addedFileItems: any) {\r\n                console.info('onAfterAddingAll', addedFileItems);\r\n            };\r\n            uploader.onBeforeUploadItem = function (item: any) {\r\n                console.info('onBeforeUploadItem', item);\r\n            };\r\n            uploader.onProgressItem = function (fileItem: any, progress: any) {\r\n                console.info('onProgressItem', fileItem, progress);\r\n            };\r\n            uploader.onProgressAll = function (progress: any) {\r\n                console.info('onProgressAll', progress);\r\n            };\r\n\r\n            uploader.onErrorItem = function (fileItem: any, response: any, status: any, headers: any) {\r\n                console.info('onErrorItem', fileItem, response, status, headers);\r\n            };\r\n            uploader.onCancelItem = function (fileItem: any, response: any, status: any, headers: any) {\r\n                console.info('onCancelItem', fileItem, response, status, headers);\r\n            };\r\n            uploader.onCompleteItem = function (fileItem: any, response: any, status: any, headers: any) {\r\n                // console.info('onCompleteItem', fileItem, response, status, headers);\r\n                // console.log(headers);\r\n                this.atLeastSingleFileUploaded = true;\r\n            };\r\n            uploader.onCompleteAll = function () {\r\n                console.info('onCompleteAll');\r\n                this.atLeastSingleFileUploaded = true;\r\n            };\r\n\r\n            return uploader;\r\n        }\r\n    }\r\n\r\n    abstract class DataRetriever {\r\n        static readonly $inject = ['baseURL', '$resource'];\r\n        protected _baseURL: string;\r\n        protected _resource: ng.resource.IResourceService;\r\n\r\n        constructor(private baseURL: string, private $resource: ng.resource.IResourceService) {\r\n            this._baseURL = baseURL;\r\n            this._resource = $resource;\r\n        }\r\n\r\n        public abstract retrieve: (cbS:Function , cbF: Function) => any;\r\n    }\r\n\r\n    export class SimulatedReadsFactory extends DataRetriever {\r\n        static factory() {\r\n            let instance = (baseURL: string, $resource: ng.resource.IResourceService) =>\r\n                new SimulatedReadsFactory(baseURL, $resource);\r\n            return instance;\r\n        }\r\n\r\n        public retrieve = (cbS:Function , cbF: Function) => {\r\n            console.log(\"retrieving simulated reads\");\r\n            return this._resource(this._baseURL + \"reads\", null, {\r\n                'update': {\r\n                    method: 'PUT'\r\n                }\r\n            }).query(cbS,cbF);\r\n        }\r\n    }\r\n\r\n    export class AlgorithmsFactory extends DataRetriever {\r\n        static factory() {\r\n            let instance = (baseURL: string, $resource: ng.resource.IResourceService) =>\r\n                new AlgorithmsFactory(baseURL, $resource);\r\n            return instance;\r\n        }\r\n\r\n        public retrieve = (cbS:Function , cbF: Function) => {\r\n            return this._resource(this._baseURL + \"algorithm\", null, {\r\n                'update': {\r\n                    method: 'PUT'\r\n                }\r\n            }).query(cbS,cbF);\r\n        }\r\n    }\r\n\r\n    export class ExperimentFactory extends DataRetriever {\r\n        static factory() {\r\n            let instance = (baseURL: string, $resource: ng.resource.IResourceService) =>\r\n                new ExperimentFactory(baseURL, $resource);\r\n            return instance;\r\n        }\r\n\r\n        public submit(formdata: any): any {\r\n\r\n            return this._resource(this._baseURL + \"experiment\").save({}, formdata);\r\n        }\r\n\r\n        public retrieve = (cbS:Function , cbF: Function) => {\r\n            return this._resource(this._baseURL + \"experiment\", null, {\r\n                'update': {\r\n                    method: 'PUT'\r\n                }\r\n            }).query(cbS,cbF);\r\n        }\r\n    }\r\n\r\n    wevoteApp\r\n        .constant(\"baseURL\", \"http://localhost:3000/\")\r\n        .factory('FileUploaderService', FileUploaderFactory.factory())\r\n        .factory('SimulatedReadsService', SimulatedReadsFactory.factory())\r\n        .factory('AlgorithmsService', AlgorithmsFactory.factory())\r\n        .factory('ExperimentService', ExperimentFactory.factory())\r\n}"]}